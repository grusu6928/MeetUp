{"ast":null,"code":"var _jsxFileName = \"/Users/george/Documents/Junior/cs32/term/term-project-ahijaz-egenet-grusu-hshah9/term-gui/src/Lookers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport TextInput from './TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Lookers(props) {\n  _s();\n\n  const [eventType, setEventType] = useState(\"\");\n  const [privacy, setPrivacy] = useState(true);\n  const [location, setLocation] = useState([]);\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  const [attendees, setAttendees] = useState([\"George\", \"Hamzah\", \"Ermias\", \"Amin\", \"Nick\"]);\n  const attendeeUI = document.getElementById(\"attendeeList\");\n\n  const updateEventInfo = (eType, ePrivacy, eLocation, eStart, eEnd, eAttendees) => {\n    setEventType(eType);\n    setPrivacy(ePrivacy);\n    setLocation(eLocation);\n    setStartTime(eStart);\n    setEndTime(eEnd);\n    setAttendees(eAttendees);\n  };\n\n  const getPrivacy = priv => {\n    if (priv === true) {\n      return \"Private Event\";\n    } else {\n      return \"Public Event\";\n    }\n  };\n\n  const listAttendees = () => {\n    let len = attendees.length;\n    attendeeUI.innerHTML = \"\";\n\n    for (let i = 0; i < len; i++) {\n      attendeeUI.innerHTML += `<li tabindex=\"0\" class = \"att\">${attendees[i]}</li>`;\n    }\n  };\n\n  const requestEvents = () => {\n    const toSend = {\n      lookerID: props.currUser\n    };\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      }\n    };\n    axios.post('http://localhost:4567/lookers', toSend, config).then(response => {\n      // want to update event information\n      //updateEventInfo()\n      listAttendees();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Lookers\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Lookers-header\",\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Looker: After Joining Event Friend Is In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this), \"Event Type: Soccer!! \", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 54\n    }, this), \"Event Privacy: \", getPrivacy(privacy), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 49\n    }, this), \"Location: Main Green!! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 52\n    }, this), \"Start Time: 19:00 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 48\n    }, this), \"End Time: 21:00 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 44\n    }, this), \"Attendees: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"attendeeList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Lookers, \"F9SCR0Res9zBuAkMJGgOW1tugOo=\");\n\n_c = Lookers;\nexport default Lookers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lookers\");","map":{"version":3,"sources":["/Users/george/Documents/Junior/cs32/term/term-project-ahijaz-egenet-grusu-hshah9/term-gui/src/Lookers.js"],"names":["React","useState","axios","TextInput","Lookers","props","eventType","setEventType","privacy","setPrivacy","location","setLocation","startTime","setStartTime","endTime","setEndTime","attendees","setAttendees","attendeeUI","document","getElementById","updateEventInfo","eType","ePrivacy","eLocation","eStart","eEnd","eAttendees","getPrivacy","priv","listAttendees","len","length","innerHTML","i","requestEvents","toSend","lookerID","currUser","config","headers","post","then","response","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport TextInput from './TextInput';\n\nfunction Lookers(props) {\n    const [eventType, setEventType] = useState(\"\")\n    const [privacy, setPrivacy] = useState(true)\n    const [location, setLocation] = useState([])\n    const [startTime, setStartTime] = useState(0)\n    const [endTime, setEndTime] = useState(0)\n    const [attendees, setAttendees] = useState([\"George\", \"Hamzah\", \"Ermias\", \"Amin\", \"Nick\"])\n    const attendeeUI = document.getElementById(\"attendeeList\");\n    \n\n    const updateEventInfo = (eType, ePrivacy, eLocation, eStart, eEnd, eAttendees) => {\n        setEventType(eType)\n        setPrivacy(ePrivacy)\n        setLocation(eLocation)\n        setStartTime(eStart)\n        setEndTime(eEnd)\n        setAttendees(eAttendees)\n    }\n    const getPrivacy = (priv) => {\n        if (priv === true) {\n            return \"Private Event\"\n        } else {\n            return \"Public Event\"\n        }\n    }\n    const listAttendees = () => {\n        let len = attendees.length\n        attendeeUI.innerHTML = \"\";\n        for (let i = 0; i < len; i++) {\n            attendeeUI.innerHTML += (`<li tabindex=\"0\" class = \"att\">${attendees[i]}</li>`)\n        }\n    }\n\n    const requestEvents = () => {\n        const toSend = {\n            lookerID: (props.currUser)\n        }\n        let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              'Access-Control-Allow-Origin': '*',\n              }\n            }\n            axios.post('http://localhost:4567/lookers', toSend, config)\n            .then(response => {\n                // want to update event information\n                //updateEventInfo()\n                listAttendees();\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n          }\n          return (\n            <div className=\"Lookers\">\n              <header className=\"Lookers-header\">\n                <title>Looker: After Joining Event Friend Is In</title>\n              </header>\n            Event Type: Soccer!! {/*  {eventType}*/} <br/> \n            Event Privacy: {getPrivacy(privacy)}<br/>\n            Location: Main Green!! {/*{location}*/}<br/>\n            Start Time: 19:00 {/*{startTime}*/}<br/>\n            End Time: 21:00 {/*{endTime}*/}<br/>\n            {/* need to find a way to keep track of total number of people we want for this event, \n            so I can display how many more peoploe can sign up here e.g. \"8 more spots open!!\" */}\n            Attendees: <br/>\n            <ul id = \"attendeeList\">\n            </ul>\n        </div>\n          );\n}\nexport default Lookers"]},"metadata":{},"sourceType":"module"}